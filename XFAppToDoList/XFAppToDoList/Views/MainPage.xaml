<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="XFAppToDoList.Views.MainPage"
             xmlns:custom="clr-namespace:XFAppToDoList.CustomControl"
             xmlns:i="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             Title="{Binding GetTitle}">
    <AbsoluteLayout >

        <StackLayout Orientation="Horizontal" 
                     AbsoluteLayout.LayoutBounds="0,0,1,0.1"
                     AbsoluteLayout.LayoutFlags="HeightProportional,WidthProportional">
            <Label Text="All"
                   Margin="0,20,0,0"
                   FontSize="Medium"
                   VerticalOptions="CenterAndExpand"
                   HorizontalOptions="StartAndExpand"
                   IsVisible="{Binding IsDeleteMode}"/>
            <custom:ToggleButton x:Name="BtnDeleteAll"                                 
                             IsVisible="{Binding IsDeleteMode}"
                             HeightRequest="40"
                             WidthRequest="40"
                             Checked="{Binding IsCheckBtnDeleteAll,Mode=TwoWay}"
                             Margin="0,0,20,0"
                             Icon="https://png.icons8.com/ios/20/000000/checkmark.png"
                             FillColorCheck="DeepSkyBlue"
                             FillColorUnCheck="White"
                             VerticalOptions="CenterAndExpand"
                             HorizontalOptions="EndAndExpand"/>

        </StackLayout>
        <StackLayout x:Name="ScLFooter"
                     BackgroundColor="Wheat"
                     Orientation="Horizontal" 
                     AbsoluteLayout.LayoutBounds="1,1,1,0.1"
                     AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional,WidthProportional">

            <Button x:Name="BtnCancel"
                    Text="Cancel"
                    Command="{Binding CommandBtnCancelPress}"
                    IsVisible="{Binding IsDeleteMode}"
                    HorizontalOptions="CenterAndExpand"/>

            <Button x:Name="BtnDeleteSelect"
                    Command="{Binding CommandBtnDeleteSelectPress}"
                    Text="Delete"
                    IsVisible="{Binding IsDeleteMode}"
                    HorizontalOptions="CenterAndExpand"/>

            <Button x:Name="BtnAdd"
                    Text="Add"
                    IsVisible="{Binding IsNormalMode}"
                    Command="{Binding CommandAddJob}"
                    HorizontalOptions="CenterAndExpand"/>

            <Button x:Name="BtnChoice"
                    Text="Choice"
                    IsVisible="{Binding IsNormalMode}"
                    Command="{Binding CommandBtnChoicePressed}"
                    HorizontalOptions="CenterAndExpand"/>
            <Button x:Name="BtnAbout" 
                    Text="About"
                    IsVisible="{Binding IsNormalMode}"
                    Command="{Binding CommandClickBtnAbout}"
                    CommandParameter="{x:Reference LsvToDo}"
                    HorizontalOptions="CenterAndExpand"/>
        </StackLayout>


        <Grid AbsoluteLayout.LayoutBounds="0,0.5,1,0.8"
              AbsoluteLayout.LayoutFlags="PositionProportional,HeightProportional,WidthProportional">
            <ListView x:Name="LsvToDo" 
                      HasUnevenRows="True"
                      ItemsSource="{Binding ListToDo}" >
                <ListView.Behaviors>
                    <i:EventToCommandBehavior EventName="SizeChanged"
                                              Command="{Binding CommandLsvToDoSizeChanged}"
                                              CommandParameter="{x:Reference LsvToDo}"/>

                    <i:EventToCommandBehavior EventName="ItemTapped"
                                          Command="{Binding CommandItemPressed}"
                                          CommandParameter="{x:Reference LsvToDo}"/>

                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <!--
                              <FlexLayout x:Name="FLItem" JustifyContent="SpaceAround" AlignContent="SpaceBetween"
                                        Direction="Row">
                                <Label Text="{Binding Title}"
                                       TextColor="Black" 
                                       IsEnabled="False" FlexLayout.Order="-1" BackgroundColor="Red"
                                       FontSize="Medium"
                                           FlexLayout.Basis="25%"
                                           VerticalOptions="CenterAndExpand">
                                    <Label.HorizontalOptions>
                                        <OnPlatform x:TypeArguments="LayoutOptions">
                                            <On Platform="WPF" Value="StartAndExpand"/>
                                            <On Platform="UWP ,Android ,iOS" Value="CenterAndExpand"/>
                                        </OnPlatform>
                                    </Label.HorizontalOptions>
                                </Label>
                                

                                <Label Text="{Binding Date}"
                                       TextColor="Black" 
                                       FontSize="Medium"
                                       IsEnabled="False" FlexLayout.Order="0"
                                           HorizontalTextAlignment="Center"
                                           FlexLayout.Basis="50%"
                                           FlexLayout.AlignSelf="Center"
                                           HorizontalOptions="CenterAndExpand"
                                           VerticalOptions="CenterAndExpand">
                                </Label>


                                <Grid FlexLayout.Order="1" BackgroundColor="Blue"
                                      FlexLayout.Basis="25%">
                                    <custom:ToggleButton IsVisible="{Binding Source={x:Reference LsvToDo} ,Path=BindingContext.IsDeleteMode}"
                                                         WidthRequest="{Binding Source={x:Reference FLItem},Path=Height}"
                                                         HeightRequest="{Binding Source={x:Reference FLItem},Path=Height}"
                                                         Icon="https://png.icons8.com/ios/15/000000/checkmark.png"
                                                         Checked="{Binding Available}"
                                                         Margin="0,0,20,0" 
                                                         HorizontalOptions="EndAndExpand"
                                                         FillColorCheck="DeepSkyBlue"
                                                         FillColorUnCheck="White"/>

                                </Grid>                                
                            </FlexLayout>
                            -->

                            <StackLayout Orientation="Horizontal" x:Name="SLItem">
                                <Label Text="{Binding Title}"
                                       TextColor="Black" 
                                       IsEnabled="False" 
                                       FontSize="Medium"
                                       LineBreakMode="NoWrap"
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand">
                                </Label>


                                <Label Text="{Binding Date}"
                                       TextColor="Black" 
                                       FontSize="Medium"
                                       IsEnabled="False"
                                       HorizontalTextAlignment="Center"
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand">
                                </Label>
                                <custom:ToggleButton IsVisible="{Binding Source={x:Reference LsvToDo} ,Path=BindingContext.IsDeleteMode}"
                                                         WidthRequest="{Binding Source={x:Reference SLItem},Path=Height}"
                                                         HeightRequest="{Binding Source={x:Reference SLItem},Path=Height}"
                                                         Icon="https://png.icons8.com/ios/15/000000/checkmark.png"
                                                         Checked="{Binding Available,Mode=TwoWay}"
                                                         Margin="0,0,20,0"
                                                         Command="{Binding Source={x:Reference LsvToDo},Path=BindingContext.CommandToggleButtonPress}"
                                                         CommandParameter="{Binding .}"
                                                         FillColorCheck="DeepSkyBlue"
                                                         FillColorUnCheck="White"/>
                            </StackLayout>
                            
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </AbsoluteLayout>
</ContentPage> 
    <!-- <Label Text="{Binding Detail}"
                                       IsVisible="False"                                       
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand"/>
                                -->


                                        <!--
                                <flex:FlexButton IsVisible="{Binding Source={x:Reference LsvToDo} ,Path=BindingContext.IsDeleteMode}"
                                                 WidthRequest="{Binding Source={x:Reference StLItem},Path=Height}"
                                                 HeightRequest="{Binding Source={x:Reference StLItem},Path=Height}"
                                                 IsToggled="{Binding Available}"
                                                 CornerRadius="38"
                                                 Margin="0,0,40,0"
                                                 ToggleMode="True"
                                                 Icon="https://png.icons8.com/ios/50/000000/checkmark.png"
                                                 ForegroundColor="Black"
                                                 HighlightForegroundColor="Yellow"
                                                 BackgroundColor="White"
                                                 HighlightBackgroundColor= "Red"
                                                 BorderColor="White"
                                                 HighlightBorderColor="White"/>
                                -->